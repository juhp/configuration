#!/usr/bin/bash

# .bashrc

HOME=$(readlink -e $HOME)

# Source global definitions
if [ -f /etc/bashrc ]; then
    source /etc/bashrc
fi

# exit if non-interactive
[ ! -t 0 ] && return 0

############### below is for interactive shell only ###########################

# don't export: eg breaks dotnet
if [ "$HOSTNAME" = "toolbox" -o -n "$VERSION" ]; then
    export -n VERSION
fi

eval $(grep "\(VERSION_ID\|VARIANT_ID\)" /etc/os-release)

if [ -n "$container" ]; then
export HISTFILE="${HOME}/.bash_history.tb.${ID}${VERSION_ID}.${TERM}"
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

set +h

# User specific aliases and functions
alias ls='ls --color=auto'
alias man='LANG=C man'

# background colours
# add 60 for light colours
RED="\e[41m"
#GREEN="\e[42m"
YELLOW="\e[43m"
BLUE="\e[44m"
PURPLE="\e[45m"
if [ -x "/usr/bin/tput" ] && [ "$(tput colors)" -le "8" ]; then
    WHITE="\e[37m"
    BLACK="\e[30m"
else
    WHITE="\e[97m"
    BLACK="\e[1;30m"
fi
REVERSEVIDEO="\e[7m"
REVERSEVIDEODIM="\e[7;2m"
COL_RESET="\e[0m"

PS_TIME="« \t \D{%a %e日} «"

function prompt_command {
    # if [ -z "$errorshown" -a $? -ne 0 ]; then
    #     exitstatus="$WHITE$RED error $COL_RESET"
    #     errorshown=yes
    # else
    #     exitstatus=""
    #     unset errorshown
    # fi

    ref=$(/usr/bin/git rev-parse --abbrev-ref HEAD 2> /dev/null)
    branch=${ref:+\\[$PURPLE\\]:$ref}

    if [ "$USER" = "petersen" -o -z "$USER" ]; then
        username=""
    else
        username="\u"
    fi
    if [ "$TERM" = "xterm-256color" -a ! "$INSIDE_EMACS" = "vterm" ]; then
        hexspace=" "
    fi
    if [ -n "$container" -a "$VARIANT_ID" = "eln" ]; then
        hostname="⬢$hexspace$VARIANT_ID$VERSION_ID"
    elif [ -n "$container" -a -n "$HOSTNAME$VERSION_ID" ]; then
        hostname="⬢$hexspace$HOSTNAME$VERSION_ID"
    elif [ "$HOSTNAME" = "toolbox" -o -n "$TOOLBOX_PATH" ]; then
        hostname="⬢$hexspace\h"
    elif [ "$HOSTNAME" = "tlbx" ]; then
        hostname="⬢${hexspace}tlbx"
    fi
    if [ -n "${username}" -a -n "${hostname}" ]; then
        userhost="${username}@${hostname}"
    elif [ -n "${username}${hostname}" ]; then
        userhost="${username}${hostname}"
    fi
    if [ "$TERM" = "xterm-256color" ]; then
        title="\e]0;${userhost}${userhost:+:}\w\a"
    fi
    case $BASH_VERSION in
        4.2*)
            echo -e "$REVERSEVIDEODIM $(date +"%a %T") $COL_RESET${exitstatus}$WHITE$COL_RESET" ;;
        *)
            echo -e "$REVERSEVIDEODIM${PS_TIME@P}${title@P}$COL_RESET${exitstatus}$WHITE$COL_RESET" ;;
    esac
}

PROMPT_COMMAND=prompt_command

vterm_printf(){
    if [ -n "$TMUX" ] && ([ "${TERM%%-*}" = "tmux" ] || [ "${TERM%%-*}" = "screen" ] ); then
        # Tell tmux to pass the escape sequences through
        printf "\ePtmux;\e\e]%s\007\e\\" "$1"
    elif [ "${TERM%%-*}" = "screen" ]; then
        # GNU screen (screen, screen-256color, screen-256color-bce)
        printf "\eP\e]%s\007\e\\" "$1"
    else
        printf "\e]%s\e\\" "$1"
    fi
}

# for prompt and directory tracking
# was "51;A$(whoami)@$(hostname):$(pwd)"
vterm_prompt_end(){
if [ "$INSIDE_EMACS" = "vterm" ]; then
    vterm_printf "51;A$(pwd)"
fi
}

case $BASH_VERSION in
    4.2*)
        PS1="\[$WHITE$BLUE\]\${userhost}\[$WHITE$PURPLE\] \w\${branch} \[$COL_RESET\]\$ " ;;
    *)
        PS1="\[$WHITE$BLUE\]\w\${branch@P}\[$COL_RESET\]\n\${userhost:+\[$BLACK$YELLOW\]\${userhost}}\$\[$COL_RESET\] "'\[$(vterm_prompt_end)\]'
esac

export PS0="$REVERSEVIDEODIM» \t \D{%a %e日} »$COL_RESET\n"

if [ -x "/usr/bin/zoxide" ]; then
    eval "$(zoxide init bash)"
fi
